{"version":3,"sources":["reportWebVitals.js","Card.js","Scroll.js","Error.js","Searchbox.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","robotsMap","robot","map","i","react_default","a","createElement","key","className","src","concat","max","Math","floor","random","alt","name","email","Fragment","Scroll","props","children","Error","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","Component","Searchbox","onSearch","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","robots","_this2","fetch","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","src_Searchbox","src_Scroll","Error_Error","src_Card","ReactDOM","createRoot","document","getElementById","render","StrictMode","react","App_App"],"mappings":"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","file":"static/js/main.19d1e769.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ robot }) => {\r\n  function getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\n  const robotsMap = robot.map((robot, i) => {\r\n    return (\r\n      <div\r\n        key={i}\r\n        className=\"card bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \"\r\n      >\r\n        <img\r\n          src={`https://robohash.org/${getRandomInt(100)}?size=200x200 `}\r\n          alt={robot.name}\r\n        />\r\n        <div>\r\n          <h2>{robot.name}</h2>\r\n          <p>{robot.email}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    //   <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n    //     <img src=\"https://robohash.org/test?size=200x200 \" alt=\"a robot\" />\r\n    //     <div>\r\n    //       <h2>Jane Doe</h2>\r\n    //       <p>jane.doe@gmail.com</p>\r\n    //     </div>\r\n    //   </div>\r\n    <>{robotsMap}</>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n  return <div className=\"scroll\">{props.children}</div>;\r\n};\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Error extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>That didn't went well....Error</h1>;\r\n    } else return this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./searchbox.css\";\r\n\r\nconst Searchbox = ({ onSearch }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\" bloob pa3 ba b--green bg-lightest-blue br-pill \"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={onSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./app.css\";\r\nimport Card from \"./Card\";\r\nimport { robots } from \"./robots\";\r\n\r\nimport Scroll from \"./Scroll\";\r\nimport Error from \"./Error\";\r\nimport SearchBox from \"./Searchbox\";\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  //have to be an arrow function\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return (\r\n        <div className=\"spinner-container\">\r\n          <div className=\"spinner\"></div>\r\n          <h1>Charging...</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"container-input\">\r\n            <h1 className=\"\">BotList</h1>\r\n            <SearchBox onSearch={this.onSearchChange} />\r\n          </div>\r\n\r\n          <div className=\"container-robots\">\r\n            <Scroll>\r\n              <Error>\r\n                <Card robot={filteredRobots} />\r\n              </Error>\r\n            </Scroll>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\n\nimport \"tachyons\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Fragment>\n      <App />\n    </Fragment>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}